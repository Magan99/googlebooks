{"ast":null,"code":"import _defineProperty from \"/Users/adahir2197/Desktop/Google books/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/adahir2197/Desktop/Google books/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/adahir2197/Desktop/Google books/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/adahir2197/Desktop/Google books/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/adahir2197/Desktop/Google books/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/adahir2197/Desktop/Google books/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/adahir2197/Desktop/Google books/client/src/pages/Books/Books.js\";\nimport React, { Component } from \"react\";\nimport Jumbotron from \"../../components/Jumbotron\";\nimport DeleteBtn from \"../../components/DeleteBtn\";\nimport API from \"../../utils/API\";\nimport Search from \"./Search\";\nimport Saved from \"./Saved\";\nimport './../../components/Header/Header.css';\nimport { Col, Row, Container } from \"../../components/Grid\";\nimport { List, ListItem } from \"../../components/List\";\nimport { Input, TextArea, FormBtn } from \"../../components/Form\";\nimport { Header } from \"../../components/Header\";\n\nvar Books =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Books, _Component);\n\n  function Books() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Books);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Books)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      books: [],\n      title: \"\" // q: \"\",\n      // error: \"error\"\n\n    };\n\n    _this.handleInputChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleFormSubmit = function (event) {\n      event.preventDefault();\n\n      if (_this.state.title) {\n        // console.log(this.state.title);\n        API.getBooksFromGoogle(_this.state.title).then(function (res) {\n          return _this.setState({\n            books: res.data.items\n          });\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    };\n\n    _this.saveBookToDataBase = function (id) {\n      console.log('iddd', id);\n      API.saveBook(_this.state.title).then(function (res) {\n        return _this.setState({\n          books: res.data.items\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Books, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var books = this.state.books;\n      console.log('books', books); // if (!this.state.books) {\n      //   return <span>Loading...</span>\n      // }\n\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Search Books\")), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Input, {\n        value: this.state.title,\n        onChange: this.handleInputChange,\n        name: \"title\",\n        placeholder: \"Title (required)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(FormBtn, {\n        disabled: !this.state.title,\n        onClick: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Submit Book\")), this.state.books.length > 0 ? React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, this.state.books.map(function (book) {\n        return React.createElement(\"li\", {\n          key: book.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: book.volumeInfo.imageLinks === undefined ? 'http://placehold.it/200x200' : book.volumeInfo.imageLinks.thumbnail,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }), book.volumeInfo.title, \" by \", book.volumeInfo.authors === undefined ? 'John Doe' : book.volumeInfo.authors[0], book.volumeInfo.description, React.createElement(\"a\", {\n          href: book.volumeInfo.infoLink,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, \"View\")), React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this2.saveBookToDataBase(book);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, \"Save\"));\n      })) : React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"No Results to Display\"));\n    }\n  }]);\n\n  return Books;\n}(Component);\n\nexport default Books;","map":{"version":3,"sources":["/Users/adahir2197/Desktop/Google books/client/src/pages/Books/Books.js"],"names":["React","Component","Jumbotron","DeleteBtn","API","Search","Saved","Col","Row","Container","List","ListItem","Input","TextArea","FormBtn","Header","Books","state","books","title","handleInputChange","event","target","name","value","setState","handleFormSubmit","preventDefault","getBooksFromGoogle","then","res","data","items","catch","err","console","log","saveBookToDataBase","id","saveBook","length","map","book","volumeInfo","imageLinks","undefined","thumbnail","authors","description","infoLink"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,sCAAP;AAEA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,uBAApC;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,uBAA/B;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,OAA1B,QAAyC,uBAAzC;AACA,SAASC,MAAT,QAAsB,yBAAtB;;IAEMC,K;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,KAAK,EAAC,EAFA,CAGN;AACA;;AAJM,K;;UAqCRC,iB,GAAoB,UAAAC,KAAK,EAAI;AAAA,0BACHA,KAAK,CAACC,MADH;AAAA,UACnBC,IADmB,iBACnBA,IADmB;AAAA,UACbC,KADa,iBACbA,KADa;;AAE3B,YAAKC,QAAL,qBACGF,IADH,EACUC,KADV;AAGD,K;;UAIDE,gB,GAAmB,UAAAL,KAAK,EAAI;AAC1BA,MAAAA,KAAK,CAACM,cAAN;;AACA,UAAI,MAAKV,KAAL,CAAWE,KAAf,EAAsB;AACpB;AACAf,QAAAA,GAAG,CAACwB,kBAAJ,CAAuB,MAAKX,KAAL,CAAWE,KAAlC,EACGU,IADH,CACQ,UAAAC,GAAG;AAAA,iBAAI,MAAKL,QAAL,CAAc;AAACP,YAAAA,KAAK,EAAEY,GAAG,CAACC,IAAJ,CAASC;AAAjB,WAAd,CAAJ;AAAA,SADX,EAEGC,KAFH,CAES,UAAAC,GAAG;AAAA,iBAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,SAFZ;AAGD;AACF,K;;UAEDG,kB,GAAqB,UAACC,EAAD,EAAQ;AAC3BH,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBE,EAApB;AACAlC,MAAAA,GAAG,CAACmC,QAAJ,CAAa,MAAKtB,KAAL,CAAWE,KAAxB,EACKU,IADL,CACU,UAAAC,GAAG;AAAA,eAAI,MAAKL,QAAL,CAAc;AAACP,UAAAA,KAAK,EAAEY,GAAG,CAACC,IAAJ,CAASC;AAAjB,SAAd,CAAJ;AAAA,OADb,EAEKC,KAFL,CAEW,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,OAFd;AAMD,K;;;;;;;6BAEQ;AAAA;;AAAA,UAEAhB,KAFA,GAES,KAAKD,KAFd,CAEAC,KAFA;AAGPiB,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBlB,KAArB,EAHO,CAKP;AACA;AACA;;AAEA,aACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEM,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CAFN,EAKM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AACE,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE,KADpB;AAEE,QAAA,QAAQ,EAAE,KAAKC,iBAFjB;AAGE,QAAA,IAAI,EAAC,OAHP;AAIE,QAAA,WAAW,EAAC,kBAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAOE,oBAAC,OAAD;AACE,QAAA,QAAQ,EAAE,CAAE,KAAKH,KAAL,CAAWE,KADzB;AAEE,QAAA,OAAO,EAAE,KAAKO,gBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAPF,CALN,EAoBO,KAAKT,KAAL,CAAWC,KAAX,CAAiBsB,MAAjB,GAA0B,CAA1B,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKvB,KAAL,CAAWC,KAAX,CAAiBuB,GAAjB,CAAqB,UAAAC,IAAI;AAAA,eACxB;AAAI,UAAA,GAAG,EAAEA,IAAI,CAACJ,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,GAAG,EAAEI,IAAI,CAACC,UAAL,CAAgBC,UAAhB,KAA+BC,SAA/B,GAA2C,6BAA3C,GAA2EH,IAAI,CAACC,UAAL,CAAgBC,UAAhB,CAA2BE,SAAhH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAEOJ,IAAI,CAACC,UAAL,CAAgBxB,KAFvB,UAEkCuB,IAAI,CAACC,UAAL,CAAgBI,OAAhB,KAA4BF,SAA5B,GAAwC,UAAxC,GAAqDH,IAAI,CAACC,UAAL,CAAgBI,OAAhB,CAAwB,CAAxB,CAFvF,EAGOL,IAAI,CAACC,UAAL,CAAgBK,WAHvB,EAII;AAAG,UAAA,IAAI,EAAEN,IAAI,CAACC,UAAL,CAAgBM,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CAJJ,EAUE;AAAS,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACZ,kBAAL,CAAwBK,IAAxB,CAAN;AAAA,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF,CADwB;AAAA,OAAzB,CADH,CADD,GAoBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAxCR,CADF;AA8CD;;;;EA3HiBzC,S;;AA8HpB,eAAee,KAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Jumbotron from \"../../components/Jumbotron\";\nimport DeleteBtn from \"../../components/DeleteBtn\";\nimport API from \"../../utils/API\";\nimport Search from \"./Search\";\nimport Saved from \"./Saved\";\nimport './../../components/Header/Header.css'\n\nimport { Col, Row, Container } from \"../../components/Grid\";\nimport { List, ListItem } from \"../../components/List\";\nimport { Input, TextArea, FormBtn } from \"../../components/Form\";\nimport { Header} from \"../../components/Header\";\n\nclass Books extends Component {\n  // Setting our component's initial state\n  state = {\n    books: [],\n    title:\"\",\n    // q: \"\",\n    // error: \"error\"\n  };\n\n\n  // When the component mounts, load all books and save them to this.state.books\n  // componentDidMount() {\n  //   this.loadBooks();\n  // }\n\n  // // Loads all books  and sets them to this.state.books\n  // loadBooks = () => {\n  //   API.getBooks(this.state.q)\n  //     .then(res =>\n  //       this.setState({ \n  //         books: res.data\n  //       })\n  //     )\n  //     .catch(() => \n  //     this.setState({ \n  //       books: [], \n  //       err: \"error\"\n  //     })\n  //     );\n  // };\n\n  // Deletes a book from the database with a given id, then reloads books from the db\n  // deleteBook = id => {\n  //   API.deleteBook(id)\n  //     .then(res => this.loadBooks())\n  //     .catch(err => console.log(err));\n  // };\n\n  // Handles updating component state when the user types into the input field\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  // When the form is submitted, use the API.saveBook meToDataBasethod to save the book data\n  // Then reload books from the database\n  handleFormSubmit = event => {\n    event.preventDefault();\n    if (this.state.title) {\n      // console.log(this.state.title);\n      API.getBooksFromGoogle(this.state.title)\n        .then(res => this.setState({books: res.data.items}))\n        .catch(err => console.log(err));\n    }\n  };\n\n  saveBookToDataBase = (id) => {\n    console.log('iddd', id)\n    API.saveBook(this.state.title)\n        .then(res => this.setState({books: res.data.items}))\n        .catch(err => console.log(err));\n\n\n\n  }\n\n  render() {\n\n    const {books} = this.state\n    console.log('books', books)\n\n    // if (!this.state.books) {\n    //   return <span>Loading...</span>\n    // }\n\n    return (\n      <div className=\"container\">\n\n            <Jumbotron> \n              <h2>Search Books</h2>\n            </Jumbotron>\n            <form>\n              <Input\n                value={this.state.title}\n                onChange={this.handleInputChange}\n                name=\"title\"\n                placeholder=\"Title (required)\"\n              />\n              <FormBtn\n                disabled={!(this.state.title)}\n                onClick={this.handleFormSubmit}\n              >\n                Submit Book\n              </FormBtn>\n            </form>\n \n            {this.state.books.length > 0 ? (\n              <ul>\n                {this.state.books.map(book => (\n                  <li key={book.id}>\n                      <img src={book.volumeInfo.imageLinks === undefined ? 'http://placehold.it/200x200' : book.volumeInfo.imageLinks.thumbnail} />\n                        {book.volumeInfo.title} by {book.volumeInfo.authors === undefined ? 'John Doe' : book.volumeInfo.authors[0]}\n                        {book.volumeInfo.description}\n                      <a href={book.volumeInfo.infoLink}>\n                        <button>View</button>\n                      </a>\n                      \n\n                      \n                    <button  onClick={() => this.saveBookToDataBase(book)}>Save</button>\n                  </li>\n                ))}\n              </ul>\n            ):\n            (\n\n              <h3>No Results to Display</h3>\n            )}\n\n      </div>\n    );\n  }\n}\n\nexport default Books;\n"]},"metadata":{},"sourceType":"module"}